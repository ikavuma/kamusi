<?php
// $Id: reportbug.module,v 1.103.2.1 2008/04/09 21:11:46 goba Exp $

/**
 * @file
 * Enables the use of personal and site-wide reportbug forms.
 */

/**
 * Implementation of hook_help().
 */
function reportbug_help($path, $arg) {
  switch ($path) {
    case 'admin/help#reportbug':
      $output = '<p>'. t('The reportbug module facilitates communication via e-mail, by allowing your site\'s visitors to reportbug one another (personal reportbug forms), and by providing a simple way to direct messages to a set of administrator-defined recipients (the <a href="@reportbug">reportbug page</a>). With either form, users specify a subject, write their message, and (optionally) have a copy of their message sent to their own e-mail address.', array('@reportbug' => url('reportbug'))) .'</p>';
      $output .= '<p>'. t("Personal reportbug forms allow users to be reportbuged via e-mail, while keeping recipient e-mail addresses private. Users may enable or disable their personal reportbug forms by editing their <em>My account</em> page. If enabled, a <em>reportbug</em> tab leading to their personal reportbug form is available on their user profile. Site administrators have access to all personal reportbug forms (even if they have been disabled). The <em>reportbug</em> tab is only visible when viewing another user's profile (users do not see their own <em>reportbug</em> tab).") .'</p>';
      $output .= '<p>'. t('The <a href="@reportbug">reportbug page</a> provides a simple form for visitors to leave comments, feedback, or other requests. Messages are routed by selecting a category from a list of administrator-defined options; each category has its own set of e-mail recipients. Common categories for a business site include, for example, "Website feedback" (messages are forwarded to web site administrators) and "Product information" (messages are forwarded to members of the sales department). The actual e-mail addresses defined within a category are not displayed. Only users in roles with the <em>access site-wide reportbug form</em> permission may access the <a href="@reportbug">reportbug page</a>.', array('@reportbug' => url('reportbug'))) .'</p>';
      $output .= '<p>'. t('A link to your site\'s <a href="@reportbug">reportbug page</a> from the main <em>Navigation</em> menu is created, but is disabled by default. Create a similar link on another menu by adding a menu item pointing to the path "reportbug"', array('@reportbug' => url('reportbug'))) .'</p>';
      $output .= '<p>'. t('Customize the <a href="@reportbug">reportbug page</a> with additional information (like physical location, mailing address, and telephone number) using the <a href="@reportbug-settings">reportbug form settings page</a>. The <a href="@reportbug-settings">settings page</a> also provides configuration options for the maximum number of reportbug form submissions a user may perform per hour, and the default status of users\' personal reportbug forms.', array('@reportbug-settings' => url('admin/build/reportbug/settings'), '@reportbug' => url('reportbug'))) .'</p>';
      $output .= '<p>'. t('For more information, see the online handbook entry for <a href="@reportbug">reportbug module</a>.', array('@reportbug' => url('http://drupal.org/handbook/modules/reportbug/', array('absolute' => TRUE)))) .'</p>';
      return $output;
    case 'admin/build/reportbug':
      $output = '<p>'. t('This page lets you set up <a href="@form">your site-wide reportbug form</a>. To do so, add one or more categories. You can associate different recipients with each category to route e-mails to different people. For example, you can route website feedback to the webmaster and direct product information requests to the sales department. On the <a href="@settings">settings page</a>, you can customize the information shown above the reportbug form. This can be useful to provide additional reportbug information such as your postal address and telephone number.', array('@settings' => url('admin/build/reportbug/settings'), '@form' => url('reportbug'))) .'</p>';
      if (!module_exists('menu')) {
        $menu_note = t('The menu item can be customized and configured only once the menu module has been <a href="@modules-page">enabled</a>.', array('@modules-page' => url('admin/settings/modules')));
      }
      else {
        $menu_note = '';
      }
      $output .= '<p>'. t('The reportbug module also adds a <a href="@menu-settings">menu item</a> (disabled by default) to the navigation block.', array('@menu-settings' => url('admin/build/menu'))) .' '. $menu_note .'</p>';
      return $output;
  }
}

/**
 * Implementation of hook_perm
 */
function reportbug_perm() {
  return array('access site-wide reportbug form', 'administer site-wide reportbug form');
}
/**
 * Implementation of hook_menu().
 */
function reportbug_menu() {
  $items['admin/build/reportbug'] = array(
    'title' => 'reportbug form',
    'description' => 'Create a system reportbug form and set up categories for the form to use.',
    'page callback' => 'reportbug_admin_categories',
    'access arguments' => array('administer site-wide reportbug form'),
    'file' => 'reportbug.admin.inc',
  );
  $items['admin/build/reportbug/list'] = array(
    'title' => 'List',
    'page callback' => 'reportbug_admin_categories',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'file' => 'reportbug.admin.inc',
  );
  $items['admin/build/reportbug/add'] = array(
    'title' => 'Add category',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('reportbug_admin_edit', 3),
    'access arguments' => array('administer site-wide reportbug form'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
    'file' => 'reportbug.admin.inc',
  );
  $items['admin/build/reportbug/edit/%reportbug'] = array(
    'title' => 'Edit reportbug category',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('reportbug_admin_edit', 3, 4),
    'access arguments' => array('administer site-wide reportbug form'),
    'type' => MENU_CALLBACK,
    'file' => 'reportbug.admin.inc',
  );
  $items['admin/build/reportbug/delete/%reportbug'] = array(
    'title' => 'Delete reportbug',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('reportbug_admin_delete', 4),
    'access arguments' => array('administer site-wide reportbug form'),
    'type' => MENU_CALLBACK,
    'file' => 'reportbug.admin.inc',
  );
  $items['admin/build/reportbug/settings'] = array(
    'title' => 'Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('reportbug_admin_settings'),
    'access arguments' => array('administer site-wide reportbug form'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
    'file' => 'reportbug.admin.inc',
  );
  $items['reportbug'] = array(
    'title' => 'reportbug',
    'page callback' => 'reportbug_site_page',
    'access arguments' => array('access site-wide reportbug form'),
    'type' => MENU_SUGGESTED_ITEM,
    'file' => 'reportbug.pages.inc',
  );
  $items['user/%user/reportbug'] = array(
    'title' => 'reportbug',
    'page callback' => 'reportbug_user_page',
    'page arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'access callback' => '_reportbug_user_tab_access',
    'access arguments' => array(1),
    'weight' => 2,
    'file' => 'reportbug.pages.inc',
  );
  return $items;
}

/**
 * Determine if a user can access to the reportbug tab.
 */
function _reportbug_user_tab_access($account) {
  global $user;
  if (!isset($account->reportbug)) {
    $account->reportbug = FALSE;
  }
  return
    $account && $user->uid &&
    (
      ($user->uid != $account->uid && $account->reportbug) ||
      user_access('administer users')
    );
}

/**
 * Load the data for a single reportbug category.
 */
function reportbug_load($cid) {
  $reportbug = db_fetch_array(db_query("SELECT * FROM {reportbug} WHERE cid = %d", $cid));
  return empty($reportbug) ? FALSE : $reportbug;
}

/**
 * Implementation of hook_user().
 *
 * Allows the user the option of enabling/disabling his personal reportbug form.
 */
function reportbug_user($type, &$edit, &$user, $category = NULL) {
  if ($type == 'form' && $category == 'account') {
    $form['reportbug'] = array('#type' => 'fieldset',
      '#title' => t('reportbug settings'),
      '#weight' => 5,
      '#collapsible' => TRUE,
    );
    $form['reportbug']['reportbug'] = array('#type' => 'checkbox',
      '#title' => t('Personal reportbug form'),
      '#default_value' => !empty($edit['reportbug']) ? $edit['reportbug'] : FALSE,
      '#description' => t('Allow other users to reportbug you by e-mail via <a href="@url">your personal reportbug form</a>. Note that while your e-mail address is not made public to other members of the community, privileged users such as site administrators are able to reportbug you even if you choose not to enable this feature.', array('@url' => url("user/$user->uid/reportbug"))),
    );
    return $form;
  }
  elseif ($type == 'validate') {
    return array('reportbug' => isset($edit['reportbug']) ? $edit['reportbug'] : FALSE);
  }
  elseif ($type == 'insert') {
    $edit['reportbug'] = variable_get('reportbug_default_status', 1);
  }
}

/**
 * Implementation of hook_mail().
 */
function reportbug_mail($key, &$message, $params) {
  $language = $message['language'];
  switch ($key) {
    case 'page_mail':
    case 'page_copy':
      $reportbug = $params['reportbug'];
      $message['subject'] .= t('[!category] !subject', array('!category' => $reportbug['category'], '!subject' => $params['subject']), $language->language);
      $message['body'][] = t("!name sent a message using the reportbug form at !form.", array('!name' => $params['name'], '!form' => url($_GET['q'], array('absolute' => TRUE, 'language' => $language))), $language->language);
      $message['body'][] = $params['message'];
      break;
    case 'page_autoreply':
      $reportbug = $params['reportbug'];
      $message['subject'] .= t('[!category] !subject', array('!category' => $reportbug['category'], '!subject' => $params['subject']), $language->language);
      $message['body'][] = $reportbug['reply'];
      break;
    case 'user_mail':
    case 'user_copy':
      $user = $params['user'];
      $account = $params['account'];
      $message['subject'] .= '['. variable_get('site_name', 'Drupal') .'] '. $params['subject'];
      $message['body'][] = "$account->name,";
      $message['body'][] = t("!name (!name-url) has sent you a message via your reportbug form (!form-url) at !site.", array('!name' => $user->name, '!name-url' => url("user/$user->uid", array('absolute' => TRUE, 'language' => $language)), '!form-url' => url($_GET['q'], array('absolute' => TRUE, 'language' => $language)), '!site' => variable_get('site_name', 'Drupal')), $language->language);
      $message['body'][] = t("If you don't want to receive such e-mails, you can change your settings at !url.", array('!url' => url("user/$account->uid", array('absolute' => TRUE, 'language' => $language))), $language->language);
      $message['body'][] = t('Message:', NULL, $language->language);
      $message['body'][] = $params['message'];
      break;
  }
}
